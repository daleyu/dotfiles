""" Map leader to space ---------------------
let mapleader=" "

""" Some Basic vim necessities -------------
set hlsearch
set scrolloff=10
set number
set relativenumber
set showmode
set showcmd
set smartcase
set ignorecase
set incsearch
set hlsearch
set visualbell
set clipboard+=unnamed
set clipboard+=unnamedplus

""" plugins --------------------------------
set easymotion
set multiple-cursors
set nerdtree
set which-key
set surround
set commentary

""" Custom deletion settings ---------------
" have x (removes single character) not go into the default registry
nnoremap x "_x
" other deletion settings
nnoremap <leader>dd "_dd

""" Copy and selection helpers -------------
" Copy Word
nmap ,c yiw
" Select word
nmap ,v viw

""" Copy/paste/yank improvements -----------
" change the copy and paste to match d and D binds
nnoremap Y y$
nnoremap V v$
nnoremap vv V

""" Separate clipboards (match nvim) -------
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y "+y

""" Class motions --------------------------
if &ide =~? 'intellij'
"--- Previous class opening
nnoremap [c 0?\<class\> <cr>f{:nohlsearch<cr>
"--- Next class opening
nnoremap ]c $/\<class\> <cr>f{:nohlsearch<cr>
"--- Previous class closing
nnoremap [C $?\<class\> <cr>nf{%:nohlsearch<cr>
"--- Next class closing
nnoremap ]C 0/\<class\> <cr>f{%:nohlsearch<cr>
endif

nnoremap vic gg :action MethodDown<cr>f{vi{
nnoremap vac gg :action MethodDown<cr>f{va{
nnoremap dic gg :action MethodDown<cr>f{di{
nnoremap dac gg :action MethodDown<cr>f{da{
nnoremap cic gg :action MethodDown<cr>f{ci{
nnoremap cac gg :action MethodDown<cr>f{ca{
nnoremap yic gg :action MethodDown<cr>f{yi{
nnoremap yac gg :action MethodDown<cr>f{ya{

""" Navigation improvements ----------------
nnoremap gb <C-6>
nmap <C-o> :action Back<CR>

" Buffer/Tab navigation (match nvim)
nnoremap g[ :action PreviousTab<cr>
nnoremap g] :action NextTab<cr>
nnoremap ]b :action NextTab<cr>
nnoremap [b :action PreviousTab<cr>

" Find usages (match nvim gr binding)
nnoremap gr :action FindUsages<cr>

""" Window/Split management ----------------
" Tmux like splits (keep existing)
nnoremap <a--> :action SplitHorizontally<cr>
nnoremap <a-\> :action SplitVertically<cr>
nnoremap <c-a-d> :action Unsplit<cr>

" Window focus navigation (match nvim)
nnoremap <C-h> :action PrevSplitter<cr>
nnoremap <C-l> :action NextSplitter<cr>
nnoremap <C-j> :action PrevSplitter<cr>
nnoremap <C-k> :action NextSplitter<cr>

" Close active editor (match nvim)
nnoremap <leader><BS> :action CloseContent<cr>

""" Leader-based commands (match nvim style) --
nnoremap <D-t> :action Autosync.OpenExistingProject<cr>
nnoremap <leader>f :action GotoFile<cr>
nnoremap <leader>p :action GotoAction<cr>
nnoremap <leader>gc :action GotoClass<cr>
nnoremap <leader>, :action RecentFiles<cr>

" UI toggles
nnoremap <leader>b :NERDTreeClose<cr>
nnoremap <leader><space> :action SelectInProjectView<cr>
nnoremap <leader>/ :action FindInPath<cr>
nnoremap <leader>rr :action ReplaceInPath<cr>

" Code actions (match nvim LSP bindings)
nnoremap <leader>ca :action ShowIntentionActions<cr>
nnoremap mm :action ShowPopupMenu<cr>

" Zen mode and utilities
nnoremap <leader>zm :action ToggleDistractionFreeMode<cr>

" Git integration (match nvim neogit bindings)
nnoremap <leader>ng :action Vcs.Show.Local.Changes<cr>
nnoremap <leader>hb :action Annotate<cr>
map <leader>x] <Action>(ReSharperGotoNextErrorInSolution)
map <leader>x[ <Action>(ReSharperGotoPrevErrorInSolution)

" gitsigns like navigate between hunks
nnoremap <leader>h[ :action VcsShowPrevChangeMarker<cr>
nnoremap <leader>h] :action VcsShowNextChangeMarker<cr>

""" LSP-like bindings (match nvim) ----------
" Hover and help
nnoremap gh :action ShowHoverInfo<cr>

" Go to definition/declaration (match nvim)
nnoremap gd :action GotoDeclaration<cr>
nnoremap gD :action GotoDeclaration<cr>
nnoremap gi :action GotoImplementation<cr>
nnoremap go :action GotoTypeDeclaration<cr>
nmap gt <Action>(GotoTest)


" Diagnostics (match nvim)
nnoremap ge :action ShowErrorDescription<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap [e :action GotoPreviousError<cr>

" Code formatting (match nvim F3 binding)
nnoremap <F3> :action ReformatCode<cr>
vnoremap <F3> :action ReformatCode<cr>
nnoremap <leader>cc yiw:action Replace<cr>

nnoremap ga :action ShowIntentionActions<cr>

""" Paste improvements (match nvim) --------
" paste in where the cursor is
nnoremap gP i<CR><Esc>PkJxJx
nnoremap gp a<CR><Esc>PkJxJx

""" Scrolling with recentering (match nvim) -
nnoremap <C-f> <C-f>zz
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz
nnoremap <C-b> <C-b>zz
nnoremap n nzz
nnoremap N Nzz

""" Search and utility (match nvim) --------
" clear the search buffer when hitting return
nnoremap <leader><cr> :nohlsearch<cr>

""" File operations (match nvim) -----------
nnoremap <c-g> :action ShowFilePath<cr>
nnoremap <leader>lc :action CopyPathFromRepositoryRootProvider<cr>
nmap <leader>vv ggVG"+y

""" Visual mode improvements (match nvim) --
" goated bindings for qol (match nvim exactly)
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
nnoremap J mzJ`z

" Visual mode indentation
vnoremap < <gv
vnoremap > >gv

""" Additional utility bindings (match nvim) -
" Quick macro replay
nnoremap qj @q

" Backspace behavior
nnoremap <BS> hx

" Search and replace current word (match nvim)
" nnoremap <leader>cc :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>

""" Tab navigation (alternative methods) ----
nnoremap <a-k> gT
nnoremap <a-j> gt
nnoremap <c-s-tab> gT
nnoremap <c-tab> gt

" Tmux like
nnoremap <a--> :action SplitHorizontally<cr>
nnoremap <a-\> :action SplitVertically<cr>

""" Source vimrc ---------------------------
map <leader>9 :source ~/.ideavimrc<cr>

""" Additional IntelliJ-specific bindings --
" Code formatting and organization
nnoremap <leader>= :action ReformatCode<cr>
nnoremap <leader>o :action OptimizeImports<cr>

" Debugging and running (match nvim test bindings concept)
nnoremap <leader>d :action Debug<cr>
nnoremap <leader>R :action Run<cr>
nnoremap <leader>T :action RunClass<cr>

" Refactoring
nnoremap <leader>rf :action Refactorings.QuickListPopupAction<cr>

" Error navigation (additional)
nnoremap ]e :action GotoNextError<cr>
nnoremap [e :action GotoPreviousError<cr>

" Harpoon-like quick access (using bookmarks)
nnoremap <leader>a :action ToggleBookmark<cr>
nnoremap <C-e> :action ShowBookmarks<cr>

nnoremap <leader>1 :action ToggleBookmark1<cr>
nnoremap <leader>2 :action ToggleBookmark2<cr>
nnoremap <leader>3 :action ToggleBookmark3<cr>
nnoremap <leader>4 :action ToggleBookmark4<cr>
nnoremap <C-m> :action GotoBookmark1<cr>
nnoremap <C-w> :action GotoBookmark2<cr>
nnoremap <C-v> :action GotoBookmark3<cr>
nnoremap <C-z> :action GotoBookmark4<cr>

""" Multi-cursor enhancements --------------
" Better multi-cursor support
map <A-n> <Action>(SelectNextOccurrence)
map <A-p> <Action>(UnselectPreviousOccurrence)
map <A-x> <Action>(SelectAllOccurrences)

""" Terminal integration -------------------
nnoremap <leader>qq :action HideAllWindows<CR>
